name: Deploy to EKS

on:
  push:
    branches:
      - main
      - dev

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Checkout code
      - name: Checkout
        uses: actions/checkout@v4

      # Configure AWS credentials (via OIDC)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::412381746256:role/githubAccessECRECSRole
          aws-region: ap-southeast-2

      # Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Build, tag and push image to ECR
      - name: Build and Push Docker image
        run: |
          IMAGE_TAG=${GITHUB_SHA::7}
          ECR_REPO=${{ steps.login-ecr.outputs.registry }}/node-api
          docker build -f ./node-api/Dockerfile -t $ECR_REPO:$IMAGE_TAG -t $ECR_REPO:latest ./node-api
          docker push $ECR_REPO:$IMAGE_TAG
          docker push $ECR_REPO:latest
          echo "ECR_REPO=$ECR_REPO" >> $GITHUB_ENV
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      # Setup kubectl
      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.30.0'

      # Update kubeconfig for EKS
      - name: Configure kubeconfig
        run: |
          aws eks update-kubeconfig \
            --region ap-southeast-2 \
            --name $(aws eks list-clusters --region ap-southeast-2 --query "clusters[0]" --output text)

      # Install EFS CSI Driver
      - name: Install EFS CSI Driver
        run: |
          kubectl apply -k "github.com/kubernetes-sigs/aws-efs-csi-driver/deploy/kubernetes/overlays/stable/ecr/?ref=release-1.6"

      # Apply namespace first
      - name: Apply Namespace
        run: |
          kubectl apply -f k8s/namespace.yaml

      # Deploy manifests with new image injected
      - name: Deploy to EKS
        run: |
          kubectl kustomize k8s/ | \
            sed "s|image:.*|image: $ECR_REPO:$IMAGE_TAG|" | \
            kubectl apply -f -
          
      # Wait for rollout
      - name: Wait for rollout
        run: |
          kubectl rollout status deployment/node-api -n demo-app

